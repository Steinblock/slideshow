image: microsoft/dotnet:latest

cache:
  paths:
    - tools/
    - packages/

stages:
  - build
  - test
  - release

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

# before_script:
#  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build:
  stage: build
  script:
    - "dotnet build"
  artifacts:
    paths:
      - "**/*/bin"

# https://docs.gitlab.com/ee/ci/docker/using_docker_build.html
build-image:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build --pull -t $CONTAINER_TEST_IMAGE src -f src/slideshow/Dockerfile
    - docker push $CONTAINER_TEST_IMAGE


test:
  stage: test
  script:
    - "[ -d tools/trx2junit ] || dotnet tool install trx2junit --tool-path tools/trx2junit"
    - "dotnet test /p:CollectCoverage=true --results-directory $CI_PROJECT_DIR --logger trx;LogFileName=TestResults.trx"
    # workaround: LogFileName is ignored
    - mv *.trx TestResults.trx
    - "[ -e TestResults.trx ] && ./tools/trx2junit/trx2junit TestResults.trx"
  artifacts:
#    paths:
#      - results
    reports:
      junit: TestResults.xml

release-image:
  stage: release
  image: docker:stable
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - master
